name: ci

on:
  push:
    branches:
      - canon
  pull_request:

permissions: read-all

jobs:
  build:
    name: integrate
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            abi: x86_64-unknown-linux-gnu
          # FIXME (aseipp): get working again
          #- os: ubuntu-24.04-arm
          #  abi: aarch64-unknown-linux-gnu
          #- os: windows-2022
          #  abi: x86_64-pc-windows-msvc
          - os: macos-15
            abi: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Install NodeJS
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e
        with:
          node-version: "22"
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: 1.86
      - name: (Linux) Install packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y mold b3sum
          python3 -m pip install semgrep # sigh...
      - name: (macOS) Install packages
        if: runner.os == 'macOS'
        run: |
          brew install b3sum semgrep
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install DotSlash
        uses: ./.github/actions/install-dotslash
      - name: Set up environment
        shell: bash
        run: echo "PATH=$GITHUB_WORKSPACE/buck/bin:$GITHUB_WORKSPACE/buck/bin/extra:$PATH" >> $GITHUB_ENV
      - name: Init jj repository
        shell: bash
        run: dotslash ./buck/bin/extra/jj git init --colocate
      - name: buck2 build ...
        shell: bash
        run: |
          buck2 build -c ci.depot_gha_ci=true @mode//debug root//...
      - name: buck2 test ...
        shell: bash
        run: |
          buck2 test -c ci.depot_gha_ci=true @mode//debug root//... -- \
            --env SEMGREP_ENABLE_VERSION_CHECK=0
      - name: Upload build logs
        if: always()
        shell: bash
        run: buck2 run //src/tools/buck2-logs:upload -- --host https://buck2-logs.deno.dev

  # dry run for target determination. TODO FIXME (aseipp): wire this up to the
  # main CI fixture later after refinement.
  target-determination:
    name: target-determination
    runs-on: ubuntu-24.04
    timeout-minutes: 5 # extra short window for now. replace later once th
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install DotSlash
        uses: ./.github/actions/install-dotslash
      - name: Set up environment
        shell: bash
        run: echo "PATH=$GITHUB_WORKSPACE/buck/bin:$GITHUB_WORKSPACE/buck/bin/extra:$PATH" >> $GITHUB_ENV
      - name: Init jj repository
        shell: bash
        run: dotslash ./buck/bin/extra/jj git init --colocate
      - name: Determine target changes
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_COMMIT="${{ github.event.pull_request.base.sha }}"
            HEAD_COMMIT="${{ github.event.pull_request.head.sha }}"
          else
            # for push events, compare against the previous commit. FIXME
            # (aseipp): is there a way on direct pushes to compare to the
            # relative previous HEAD?
            BASE_COMMIT="${{ github.event.before }}"
            HEAD_COMMIT="${{ github.sha }}"
          fi
          
          echo "Base commit: $BASE_COMMIT"
          echo "Head commit: $HEAD_COMMIT" 
          echo "\n\nDetermining impacted targets..."
          TARGETS=$(buck2 run depot//src/tools/quicktd -- "$BASE_COMMIT" "$HEAD_COMMIT" depot//...)

          echo "Affected targets:"
          if [ -f "$TARGETS" ]; then
            cat "$TARGETS"
          else
            echo "No targets file generated or targets file is empty"
          fi

  zizmor:
    name: zizmor
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          persist-credentials: false

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb

      - name: Run zizmor ðŸŒˆ
        run: uvx zizmor --format sarif . > results.sarif
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@fca7ace96b7d713c7035871441bd52efbe39e27e
        with:
          sarif_file: results.sarif
          category: zizmor
