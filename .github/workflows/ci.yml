name: ci

on:
  push:
    branches:
      - canon
  pull_request:

permissions: read-all

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            abi: x86_64-unknown-linux-gnu
          # FIXME (aseipp): get working again
          #- os: ubuntu-24.04-arm
          #  abi: aarch64-unknown-linux-gnu
          #- os: windows-2022
          #  abi: x86_64-pc-windows-msvc
          #- os: macos-14
          #  abi: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Install NodeJS
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e
        with:
          node-version: "22"
      - name: Setup OCaml
        uses: ocaml/setup-ocaml@73dd34d81d764537324523f890162b658d68aeeb
        with:
          ocaml-compiler: 5
      - name: Setup OCaml (pt. 2)
        shell: bash
        run: opam switch create 5.3.0 || opam switch set 5.3.0
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: 1.86
      - name: (Linux) Install Mold
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y mold
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install DotSlash
        uses: ./.github/actions/install-dotslash
      - name: Set up environment
        shell: bash
        run: echo "PATH=$GITHUB_WORKSPACE/buck/bin:$GITHUB_WORKSPACE/buck/bin/extra:$PATH" >> $GITHUB_ENV
      - name: Init jj repository
        shell: bash
        run: dotslash ./buck/bin/extra/jj git init --colocate
      - name: buck2 build ...
        shell: bash
        run: buck2 build @mode//debug third-party//... root//...
      - name: buck2 test ...
        shell: bash
        run: buck2 test @mode//debug third-party//... root//...
      - name: Upload build logs
        if: always()
        shell: bash
        run: buck2 run //src/tools/buck2-logs:upload -- --host https://buck2-logs.deno.dev
