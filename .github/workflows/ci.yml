name: ci

on:
  push:
    branches:
      - canon
  pull_request:

permissions:
  contents: read
  actions: read

jobs:
  build:
    name: integrate
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            abi: x86_64-unknown-linux-gnu
          # FIXME (aseipp): get working again
          #- os: ubuntu-24.04-arm
          #  abi: aarch64-unknown-linux-gnu
          #- os: windows-2022
          #  abi: x86_64-pc-windows-msvc
          - os: macos-15
            abi: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Install NodeJS
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e
        with:
          node-version: "22"
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: 1.86
      - name: (Linux) Install packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y mold
          python3 -m pip install semgrep # sigh...
      - name: (macOS) Install packages
        if: runner.os == 'macOS'
        run: |
          brew install go semgrep
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install DotSlash
        uses: ./.github/actions/install-dotslash
      - name: Set up environment
        shell: bash
        run: echo "PATH=$GITHUB_WORKSPACE/buck/bin:$GITHUB_WORKSPACE/buck/bin/extra:$PATH" >> $GITHUB_ENV
      - name: Init jj repository
        shell: bash
        run: dotslash ./buck/bin/extra/jj git init --colocate
      - name: buck2 test ...
        shell: bash
        run: |
          buck2 test -c ci.depot_gha_ci=true @mode//debug root//... -- \
            --env SEMGREP_ENABLE_VERSION_CHECK=0
      - name: Upload build logs
        if: always()
        shell: bash
        run: buck2 run //src/tools/buck2-logs:upload -- --host https://buck2-logs.deno.dev

  # Target determination workflow - parallel to main build, non-fatal for smoke testing
  target-determination:
    name: target-determination
    continue-on-error: true # Non-fatal during transition period
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            abi: x86_64-unknown-linux-gnu
          - os: macos-15
            abi: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Install NodeJS
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e
        with:
          node-version: "22"
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0
        with:
          toolchain: 1.86
      - name: (Linux) Install packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y mold
          python3 -m pip install semgrep # sigh...
      - name: (macOS) Install packages
        if: runner.os == 'macOS'
        run: |
          brew install go semgrep
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install DotSlash
        uses: ./.github/actions/install-dotslash
      - name: Set up environment
        shell: bash
        run: echo "PATH=$GITHUB_WORKSPACE/buck/bin:$GITHUB_WORKSPACE/buck/bin/extra:$PATH" >> $GITHUB_ENV
      - name: Init jj repository
        shell: bash
        run: dotslash ./buck/bin/extra/jj git init --colocate

      # Target Determination Step
      - name: Determine affected targets
        id: determine-targets
        continue-on-error: true
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_COMMIT="${{ github.event.pull_request.base.sha }}"
            HEAD_COMMIT="${{ github.event.pull_request.head.sha }}"
          else
            # for push events, compare against the previous commit
            BASE_COMMIT="${{ github.event.before }}"
            HEAD_COMMIT="${{ github.sha }}"
          fi

          echo "Base commit: $BASE_COMMIT"
          echo "Head commit: $HEAD_COMMIT"
          echo "Determining impacted targets..."

          # Run target determination
          TARGETS_FILE=$(buck2 run depot//src/tools/quicktd -- "$BASE_COMMIT" "$HEAD_COMMIT" depot//...)

          if [ -f "$TARGETS_FILE" ]; then
            TARGET_COUNT=$(wc -l < "$TARGETS_FILE")
            echo "target-file=$TARGETS_FILE" >> $GITHUB_OUTPUT
            echo "target-count=$TARGET_COUNT" >> $GITHUB_OUTPUT

            if [ "$TARGET_COUNT" -eq 0 ]; then
              echo "targets-found=false" >> $GITHUB_OUTPUT
              echo "reasonable-target-count=false" >> $GITHUB_OUTPUT
              echo "no-targets-affected=true" >> $GITHUB_OUTPUT
              echo "No targets affected by changes, skipping test"
            elif [ "$TARGET_COUNT" -le 100 ]; then
              echo "targets-found=true" >> $GITHUB_OUTPUT
              echo "reasonable-target-count=true" >> $GITHUB_OUTPUT
              echo "no-targets-affected=false" >> $GITHUB_OUTPUT
              echo "Found $TARGET_COUNT affected targets, will proceed with targeted test"
            else
              echo "targets-found=true" >> $GITHUB_OUTPUT
              echo "reasonable-target-count=false" >> $GITHUB_OUTPUT
              echo "no-targets-affected=false" >> $GITHUB_OUTPUT
              echo "Found $TARGET_COUNT affected targets, but count is too high, will fall back to full test"
            fi
          else
            echo "targets-found=false" >> $GITHUB_OUTPUT
            echo "reasonable-target-count=false" >> $GITHUB_OUTPUT
            echo "no-targets-affected=false" >> $GITHUB_OUTPUT
            # FIXME (aseipp): this should be an error in the long run
            echo "No targets file generated, will fall back to full test"
          fi

      # Test Step - either targeted or full test (skip if no targets affected)
      - name: Test affected targets
        if: steps.determine-targets.outputs.no-targets-affected != 'true'
        continue-on-error: true
        shell: bash
        run: |
          if [ "${TARGETS_FOUND}" = "true" ] && [ "${REASONABLE_TARGET_COUNT}" = "true" ]; then
            echo "Testing targeted selection of ${TARGET_COUNT} targets"
            buck2 test -c ci.depot_gha_ci=true @mode//debug @"${TARGET_FILE}" -- \
              --env SEMGREP_ENABLE_VERSION_CHECK=0
          else
            echo "Falling back to full test"
            buck2 test -c ci.depot_gha_ci=true @mode//debug root//... -- \
              --env SEMGREP_ENABLE_VERSION_CHECK=0
          fi
        env:
          TARGETS_FOUND: ${{ steps.determine-targets.outputs.targets-found }}
          REASONABLE_TARGET_COUNT: ${{ steps.determine-targets.outputs.reasonable-target-count }}
          TARGET_COUNT: ${{ steps.determine-targets.outputs.target-count }}
          TARGET_FILE: ${{ steps.determine-targets.outputs.target-file }}

      # Upload build logs (same as main CI)
      - name: Upload build logs
        if: always()
        continue-on-error: true
        shell: bash
        run: buck2 run //src/tools/buck2-logs:upload -- --host https://buck2-logs.deno.dev

      # Summary step to report what happened
      - name: Report target determination results
        if: always()
        shell: bash
        run: |
          echo "## Target Determination Summary"
          echo "- OS: ${MATRIX_OS} (${MATRIX_ABI})"
          echo "- No targets affected: ${NO_TARGETS_AFFECTED:-false}"
          echo "- Targets found: ${TARGETS_FOUND}"
          if [ "${NO_TARGETS_AFFECTED}" = "true" ]; then
            echo "- Test skipped: No targets affected by changes"
          elif [ "${TARGETS_FOUND}" = "true" ]; then
            echo "- Target count: ${TARGET_COUNT}"
            echo "- Used targeted test: ${REASONABLE_TARGET_COUNT}"
          fi
        env:
          MATRIX_OS: ${{ matrix.os }}
          MATRIX_ABI: ${{ matrix.abi }}
          NO_TARGETS_AFFECTED: ${{ steps.determine-targets.outputs.no-targets-affected }}
          TARGETS_FOUND: ${{ steps.determine-targets.outputs.targets-found }}
          TARGET_COUNT: ${{ steps.determine-targets.outputs.target-count }}
          REASONABLE_TARGET_COUNT: ${{ steps.determine-targets.outputs.reasonable-target-count }}

  zizmor:
    name: zizmor
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          persist-credentials: false

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb

      - name: Run zizmor ðŸŒˆ
        run: uvx zizmor --format sarif . > results.sarif
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@fca7ace96b7d713c7035871441bd52efbe39e27e
        with:
          sarif_file: results.sarif
          category: zizmor
